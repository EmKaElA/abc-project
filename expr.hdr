@ "string.hdr"

enum ExprKind{
  EXPR_BINARY,
  EXPR_ADD,
  EXPR_DIV,
  EXPR_MUL,
  EXPR_SUB,
  EXPR_BINARY_END,

  EXPR_PRIMARY = EXPR_BINARY_END,
  EXPR_INTEGER,
  EXPR_PRIMARY_END = EXPR_INTEGER
};

struct Expr{
  kind: ExprKind;
  left, right: ->Expr;
  decimal: string;
};

//constructor
extern fn createBinaryExpr(kind: ExprKind, left: ->Expr, right: ->Expr): ->Expr;
extern fn createIntegerExpr(val: string): ->Expr;

//destuctor
extern fn releaseExpr(expr: ->Expr);

//methods
extern fn printExprTree(expr: ->Expr);
